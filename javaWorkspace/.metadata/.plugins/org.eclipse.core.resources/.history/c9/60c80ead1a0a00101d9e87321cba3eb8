package com.pm;

import java.awt.BorderLayout;
import java.awt.FileDialog;
import java.awt.Frame;
import java.awt.Menu;
import java.awt.MenuBar;
import java.awt.MenuItem;
import java.awt.TextArea;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;

public class Ex08ByInstructor extends Frame implements ActionListener {
	TextArea ta;

	public Ex08ByInstructor() {
		MenuBar bar = new MenuBar();

		Menu mn1 = new Menu("File");
		Menu mn2 = new Menu("Help");
		MenuItem mn1_1 = new MenuItem("New");
		MenuItem mn1_2 = new MenuItem("Open");
		MenuItem mn1_3 = new MenuItem("Save");
		MenuItem mn1_4 = new MenuItem("Save as");
		MenuItem mn1_5 = new MenuItem("Exit");
		MenuItem mn2_1 = new MenuItem("about");

		mn1.add(mn1_1);
		mn1.addSeparator();
		mn1.add(mn1_2);
		mn1.addSeparator();
		mn1.add(mn1_3);
		mn1.add(mn1_4);
		mn1.addSeparator();
		mn1.add(mn1_5);
		mn2.add(mn2_1);
		bar.add(mn1);
		bar.add(mn2);

		mn1_1.addActionListener(this);
		mn1_2.addActionListener(this);
		mn1_3.addActionListener(this);
		mn1_4.addActionListener(this);
		mn1_5.addActionListener(this);
		mn2_1.addActionListener(this);

		this.setMenuBar(bar);
		setLayout(new BorderLayout());
		ta = new TextArea();
		add(ta, BorderLayout.CENTER);
		setBounds(1920 + 100, 100, 500, 300);
		setVisible(true);
	}

	public static void main(String[] args) {
		new Ex08();

	}

	@Override
	public void actionPerformed(ActionEvent e) {
		if (e.getActionCommand().equals("Exit")) {
			dispose();
		} else if (e.getActionCommand().equals("Open")) {
			FileDialog dia = new FileDialog(this);
			dia.setVisible(true);
			String dir = dia.getDirectory();
			String name = dia.getFile();

			File file = new File(dir + name);
			InputStream is = null;
			if (file.exists()) {
				byte[] buf = new byte[(int) file.length()];
				try {
					is = new FileInputStream(file);
					for (long i = 0; i < file.length(); i++) {
						is.read(buf);
					}
					is.close();
				} catch (FileNotFoundException e1) {
					e1.printStackTrace();
				} catch (IOException e1) {
					e1.printStackTrace();
				}
			}
		}

	}

}
