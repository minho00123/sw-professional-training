package com.pm;

import java.awt.FileDialog;
import java.awt.Frame;
import java.awt.Menu;
import java.awt.MenuBar;
import java.awt.MenuItem;
import java.awt.TextArea;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;

public class Ex08 extends Frame implements ActionListener {
	TextArea textArea = new TextArea();

	public Ex08() {
		MenuBar bar = new MenuBar();

		Menu fileMenu = new Menu("파일");
		MenuItem newFile = new MenuItem("새파일");
		MenuItem open = new MenuItem("열기");
		MenuItem save = new MenuItem("저장");
		MenuItem saveAs = new MenuItem("다른이름으로 저장");
		MenuItem exit = new MenuItem("종료");
		fileMenu.add(newFile);
		fileMenu.add(open);
		fileMenu.addSeparator();
		fileMenu.add(save);
		fileMenu.add(saveAs);
		fileMenu.addSeparator();
		fileMenu.add(exit);

		newFile.addActionListener(this);
		open.addActionListener(this);
		save.addActionListener(this);

		Menu viewMenu = new Menu("보기");
		MenuItem introduction = new MenuItem("프로그램소개");
		viewMenu.add(introduction);

		bar.add(fileMenu);
		bar.add(viewMenu);

		setMenuBar(bar);
		add(textArea);
		setBounds(100, 100, 500, 300);
		setVisible(true);
	}

	public static void main(String[] args) {
		new Ex08();
	}

	@Override
	public void actionPerformed(ActionEvent e) {
		byte[] buffer = new byte[8];

		if (e.getActionCommand().equals("새파일")) {
			Frame newFrame = new Frame();

			MenuBar bar = new MenuBar();

			Menu fileMenu = new Menu("파일");
			MenuItem newFile = new MenuItem("새파일");
			MenuItem open = new MenuItem("열기");
			MenuItem save = new MenuItem("저장");
			MenuItem saveAs = new MenuItem("다른이름으로 저장");
			MenuItem exit = new MenuItem("종료");
			fileMenu.add(newFile);
			fileMenu.add(open);
			fileMenu.addSeparator();
			fileMenu.add(save);
			fileMenu.add(saveAs);
			fileMenu.addSeparator();
			fileMenu.add(exit);

			newFile.addActionListener(this);
			open.addActionListener(this);
			save.addActionListener(this);

			Menu viewMenu = new Menu("보기");
			MenuItem introduction = new MenuItem("프로그램소개");
			viewMenu.add(introduction);

			bar.add(fileMenu);
			bar.add(viewMenu);

			setMenuBar(bar);
			newFrame.add(textArea);

			setBounds(200, 200, 500, 300);
			setVisible(true);
		}

		if (e.getActionCommand().equals("다른이름으로 저장")) {
			Frame newFileFrame = new Frame();
			FileDialog newFileDialog = new FileDialog(newFileFrame, "저장", FileDialog.SAVE);
			newFileDialog.setBounds(100, 500, 500, 500);
			newFileDialog.setVisible(true);

			File file = new File(newFileDialog.getDirectory() + newFileDialog.getFile());

			if (!file.canExecute()) {
				try {
					file.createNewFile();
				} catch (IOException e1) {
					e1.printStackTrace();
				}
			}
		}

		if (e.getActionCommand().equals("열기")) {
			Frame newFileFrame = new Frame();
			FileDialog loadFileDialog = new FileDialog(newFileFrame, "열기", FileDialog.LOAD);
			loadFileDialog.setBounds(100, 500, 500, 500);
			loadFileDialog.setVisible(true);

			File file = new File(loadFileDialog.getDirectory() + loadFileDialog.getFile());

			if (file.exists()) {
				try {
					InputStream is = new FileInputStream(file);
					ArrayList<Byte> list = new ArrayList<>();
					int fileLength = -1;
					while ((fileLength = is.read(buffer)) != -1) {
						for (int i = 0; i < fileLength; i++) {
							list.add(buffer[i]);
						}
					}

					Byte[] temp = list.toArray(new Byte[] {});
					byte[] contents = new byte[temp.length];
					for (int i = 0; i < temp.length; i++) {
						contents[i] = temp[i];
					}

					textArea.setText(new String(contents, StandardCharsets.UTF_8));

					is.close();
				} catch (FileNotFoundException e1) {
					e1.printStackTrace();
				} catch (IOException e1) {
					e1.printStackTrace();
				}
			}
		}

		if (e.getActionCommand().equals("저장")) {
			System.out.println(e.getID());
			System.out.println(e.getModifiers());
			System.out.println(e.getSource());
			System.out.println(e.getClass());
//			System.out.println(e.);
			File file = new File("");
		}

	}

}
