package com.mvc.model;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import com.mvc.util.Mysql;

public class BoardDao {
	Connection conn;
	Statement stmt;
	ResultSet rs;

	public int getTotalCount() {
		int count = 0;
		String sql = "SELECT COUNT(*) FROM board";
		
		try {
			conn = Mysql.getConnection();
			stmt = conn.createStatement();
			rs = stmt.executeQuery(sql);
			if (rs.next()) {
				count = rs.getInt(1);
			}
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			try {
				if (rs != null) {
					rs.close();
				}

				if (stmt != null) {
					stmt.close();
				}

				if (conn != null) {
					conn.close();
				}
			} catch (SQLException e) {
				e.printStackTrace();
			}
		}
	}
	
	public List<BoardDto> getList() {
		List<BoardDto> list = new ArrayList<BoardDto>();
		int limit = 10;
		String sql = "SELECT * FROM (SELECT * FROM board WHERE id > (SELECT MAX(id) - " + limit + "*" + 5
				+ " FROM board) AND id <= (SELECT MAX(id) - " + limit + "*(" + 5 + "- 1) FROM board) LIMIT " + limit
				+ ") AS A ORDER BY id DESC";

		try {
			conn = Mysql.getConnection();
			stmt = conn.createStatement();
			rs = stmt.executeQuery(sql);
			while (rs.next()) {
				list.add(new BoardDto(rs.getInt("id"), rs.getString("userId"), rs.getString("title"),
						rs.getString("content"), rs.getDate("created_at"), rs.getDate("updated_at")));
			}
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			try {
				if (rs != null) {
					rs.close();
				}

				if (stmt != null) {
					stmt.close();
				}

				if (conn != null) {
					conn.close();
				}
			} catch (SQLException e) {
				e.printStackTrace();
			}
		}

		return list;
	}
}
