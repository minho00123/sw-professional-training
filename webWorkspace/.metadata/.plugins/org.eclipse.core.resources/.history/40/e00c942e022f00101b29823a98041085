package com.my.model;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

public class DeptDao {
	Logger logger = Logger.getLogger(this.getClass().getCanonicalName());

	public DeptDao() {
		logger.setLevel(Level.INFO);
	}

	public List<DeptDto> selectAll() throws SQLException {
		List<DeptDto> list = new ArrayList<DeptDto>();
		String sql = "select * from dept";
		Connection conn = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;

		try {
			conn = MyData.getConnection();
			pstmt = conn.prepareStatement(sql);
			rs = pstmt.executeQuery();

			while (rs.next()) {
				DeptDto bean = new DeptDto();
				bean.setDeptno(rs.getInt("deptno"));
				bean.setDname(rs.getString("dname"));
				bean.setLoc(rs.getString("loc"));
				list.add(bean);
				logger.info(bean.toString());
			}
		} finally {
			close(rs, pstmt, conn);
		}

		return list;
	}

	public DeptDto selectOne(int deptno) throws SQLException {
		DeptDto bean = null;
		String sql = "select * from dept where deptno=?";
		Connection conn = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;

		try {
			conn = MyData.getConnection();
			pstmt = conn.prepareStatement(sql);
			pstmt.setInt(1, deptno);
			rs = pstmt.executeQuery();
			if (rs.next()) {
				bean = new DeptDto(rs.getInt("deptno"), rs.getString("dname"), rs.getString("loc"));
				logger.info(bean.toString());
			}
		} finally {
			close(rs, pstmt, conn);
		}

		return bean;
	}

	public int insertOne(DeptDto bean) throws SQLException {
		String sql = "insert into dept values (?, ?, ?)";

		return executeUpdate(sql, new Object[] { bean.getDeptno(), bean.getDname(), bean.getLoc() });
	}

	public int deleteOne(int deptno) throws SQLException {
		String sql = "delete from dept where deptno=?";

		return executeUpdate(sql, new Object[] { deptno });
	}

	public int executeUpdate(String sql, Object[] objs) throws SQLException {
		Connection conn = null;
		PreparedStatement pstmt = null;

		try {
			conn = MyData.getConnection();
			pstmt = conn.prepareStatement(sql);
			for (int i = 0; i < objs.length; i++) {
				pstmt.setObject(i + 1, objs[i]);
			}

			return pstmt.executeUpdate();
		} finally {
			close(null, pstmt, conn);
		}
	}

	public void close(ResultSet rs, PreparedStatement pstmt, Connection conn) throws SQLException {
		if (rs != null)
			rs.close();
		if (pstmt != null)
			pstmt.close();
		if (conn != null)
			conn.close();
	}
}
