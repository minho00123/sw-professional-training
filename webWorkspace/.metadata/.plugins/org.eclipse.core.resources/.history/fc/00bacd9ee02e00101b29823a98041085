package com.myframework;

import java.io.IOException;
import java.util.logging.Logger;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.my.controller.IndexController;
import com.my.controller.InsertController;
import com.my.controller.ListController;
import com.my.controller.MainController;

public class FrontController extends HttpServlet {
	Logger logger = Logger.getLogger(this.getClass().getCanonicalName());

	protected void doDo(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
//		logger.info(req.getRequestURL().toString());
		logger.info(req.getContextPath());
		String url = req.getRequestURI();
		url = url.replace(req.getContextPath(), "");
		String info = null;
		java.util.Map<String, String> map;
		map = new java.util.HashMap<>();
		
//		if (url.equals("/index")) {
////			controller = new IndexController();
//			info = "com.my.controller.IndexController";
//		} else if (url.equals("/main")) {
////			controller = new MainController();
//			info = "com.my.controller.MainController";
//		} else if (url.equals("/bbs/list")) {
////			controller = new ListController();
//			info = "com.my.controller.ListController";
//		} else if (url.equals("/bbs/insert")) {
////			controller = new InsertController();
//			info = "com.my.controller.InsertController";
//		}

		Controller controller = null;
		try {
			Class clz = Class.forName(info);
			controller = (Controller) clz.newInstance();
		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		} catch (InstantiationException e) {
			e.printStackTrace();
		} catch (IllegalAccessException e) {
			e.printStackTrace();
		}

		String result = controller.execute(req, resp);
		if (result.startsWith("redirect:")) {
			result = result.replace("redirect:", "");
			resp.sendRedirect(result);
		} else {
			String prefix = "/WEB-INF/views/";
			String suffix = ".jsp";
			String viewName = prefix + result + suffix;
			req.getRequestDispatcher(viewName).forward(req, resp);
		}
	}

	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		doDo(req, resp);
	}

	@Override
	protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		doDo(req, resp);
	}
}
