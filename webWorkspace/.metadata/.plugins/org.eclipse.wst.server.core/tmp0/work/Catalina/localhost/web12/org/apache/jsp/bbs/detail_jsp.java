/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.100
 * Generated at: 2025-04-25 07:59:28 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.bbs;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import com.web12.model.*;
import com.web12.util.*;

public final class detail_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(6);
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("com.web12.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("com.web12.model");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"../css/base.css\">\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("#content {}\r\n");
      out.write("\r\n");
      out.write("#content>form {\r\n");
      out.write("	width: 500px;\r\n");
      out.write("	margin: 10px auto 50px auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#content>form>div {\r\n");
      out.write("	margin-bottom: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#content>form>div>label {\r\n");
      out.write("	width: 100px;\r\n");
      out.write("	box-sizing: border-box;\r\n");
      out.write("	display: inline-block;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#content>form>div>input {\r\n");
      out.write("	width: 390px;\r\n");
      out.write("	box-sizing: border-box;\r\n");
      out.write("	padding: 5px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#content>form>div>textarea {\r\n");
      out.write("	box-sizing: border-box;\r\n");
      out.write("	width: 500px;\r\n");
      out.write("	height: 200px;\r\n");
      out.write("	padding: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#content>form>div>button {\r\n");
      out.write("	box-sizing: border-box;\r\n");
      out.write("	width: 33%;\r\n");
      out.write("	height: 25px;\r\n");
      out.write("	float: left;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("	var btns, input, textarea;\r\n");
      out.write("	window.onload = function() {\r\n");
      out.write("		h2 = document.querySelector(\"#content>h2\");\r\n");
      out.write("		btns = document.querySelectorAll(\"form button\");\r\n");
      out.write("		input = document.querySelector(\"form>div>input\");\r\n");
      out.write("		textarea = document.querySelector(\"form>div>textarea\");\r\n");
      out.write("		btns[1].style.display = \"none\";\r\n");
      out.write("		btns[0].onclick = function(e) {\r\n");
      out.write("			h2.innerText = \"수정 페이지\";\r\n");
      out.write("			btns[1].style.display = \"inline-block\";\r\n");
      out.write("			btns[0].style.display= \"none\";\r\n");
      out.write("			input.readOnly = false;\r\n");
      out.write("			textarea.readOnly = false;\r\n");
      out.write("			btns[3].onclick = function() {\r\n");
      out.write("				h2.innerText = \"상세 페이지\";\r\n");
      out.write("				btns[1].style.display = \"none\";\r\n");
      out.write("				btns[0].style.display= \"inline-block\";\r\n");
      out.write("				input.readOnly = true;\r\n");
      out.write("				textarea.readOnly = true;\r\n");
      out.write("			};\r\n");
      out.write("		};\r\n");
      out.write("		btns[3].onclick = function() {\r\n");
      out.write("			history.back();\r\n");
      out.write("		};\r\n");
      out.write("	};\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div>\r\n");
      out.write("		<div id=\"header\">\r\n");
      out.write("			<h1>한국it여성기업인협회</h1>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div id=\"menu\">\r\n");
      out.write("			<ul>\r\n");
      out.write("				<li><a href=\"../\">home</a></li>\r\n");
      out.write("				<li><a href=\"../intro.jsp\">intro</a></li>\r\n");
      out.write("				<li><a href=\"./\">bbs</a></li>\r\n");
      out.write("				<li><a href=\"../login/\">login</a></li>\r\n");
      out.write("			</ul>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div id=\"content\">\r\n");
      out.write("		<!-- content begin -->\r\n");
      out.write("		\r\n");
      out.write("		");

			String sql = "select * from bbs05 where num=" + request.getParameter("num");
			Bbs05Dto bean = null;
			
			try {
				Statement stmt = MyDataBase.getConnection().createStatement();
				ResultSet rs = stmt.executeQuery(sql);
				if (rs.next()) {
					bean = new Bbs05Dto(
								rs.getInt("num"),
								rs.getString("sub"),
								rs.getString("content"),
								rs.getInt("cnt"),
								rs.getDate("nalja")
							);
				}
			} finally {
				if (MyDataBase.getConnection() != null) MyDataBase.getConnection().close();
			}
		
      out.write("\r\n");
      out.write("			<h2>상세 페이지</h2>\r\n");
      out.write("			<form action=\"update.jsp\" method=\"post\">\r\n");
      out.write("				<input type=\"hidden\" name=\"num\" value=\"");
      out.print(bean.getNum() );
      out.write("\" readonly/>\r\n");
      out.write("				<div>\r\n");
      out.write("					<label>subject</label>\r\n");
      out.write("					<input name=\"sub\" value=\"");
      out.print(bean.getSub() );
      out.write("\" readonly=\"readonly\"/>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div>\r\n");
      out.write("					<label>cnt</label>\r\n");
      out.write("					<input name=\"cnt\" value=\"");
      out.print(bean.getCnt() );
      out.write("\" readonly/>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div>\r\n");
      out.write("					<label>nalja</label>\r\n");
      out.write("					<input type=\"date\" name=\"nalja\" value=\"");
      out.print(bean.getNalja() );
      out.write("\" readonly/>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div>\r\n");
      out.write("					<textarea name=\"content\" readonly>");
      out.print(bean.getContent() );
      out.write("</textarea>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div>\r\n");
      out.write("					<button type=\"button\">수정</button>\r\n");
      out.write("					<button type=\"submit\">submit</button>\r\n");
      out.write("					<button type=\"reset\">취소</button>\r\n");
      out.write("					<button type=\"button\">뒤로</button>\r\n");
      out.write("				</div>\r\n");
      out.write("			</form>\r\n");
      out.write("		<!-- content end -->\r\n");
      out.write("		</div>\r\n");
      out.write("		<div id=\"footer\">\r\n");
      out.write("			<address>(06130) 서울 강남구 테헤란로 7길 22, 한국과학기술회관 1관 303호</address>\r\n");
      out.write("			<p>&copy;한국IT여성기업인협회 Inc. All Rights Reserved.</p>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
